*{ 
   This is the export format for the DSpace Simple Archive Format. Really, this
   is three templates in one: dublin_core.xml, metadata_thesis.xml, 
   metadata_local.xml, and the contents file. They have just been placed in
   this one file to keep things cleaner on the filesystem. For more information
   about the format see the DSpace documentation: 
   
   https://wiki.duraspace.org/display/DSDOC18/Importing+and+Exporting+Items+via+Simple+Archive+Format 
   
   Note: be carefull about white space when editing around the content's file
   section. Since the format is not xml white space does matter.  
}*
#{if "contents".equals(template) }
#{if sub.getPrimaryDocument() != null }
${ sub.getPrimaryDocument().getName() }	bundle:CONTENT	primary:true
#{/if}
#{list items:sub.getSupplementalDocuments(), as:'attachment'}
${ attachment.getName() }	bundle:CONTENT
#{/list}
#{list items:sub.getAttachments(), as:'attachment'}
#{if attachment.getType() == org.tdl.vireo.model.AttachmentType.LICENSE}
${ attachment.getName() }	bundle:LICENSE
#{/if}
#{/list}
#{/if}
#{elseif "dublin_core.xml".equals(template) }
<?xml version="1.0" encoding="utf-8"?>
<dublin_core>

    <!-- dc.creator = Student -->
    <dcvalue element="creator">
        %{
             if (sub.getStudentLastName() == null) {
                out.print("Unknown");
             } else {
                out.print(sub.getStudentLastName().escapeXml());
                if (sub.getStudentFirstName() == null || sub.getStudentLastName()) {
                    out.print(", ");
                    if (sub.getStudentFirstName() != null)
                        out.print(sub.getStudentFirstName().escapeXml());
                    out.print(" ");
                    if (sub.getStudentMiddleName() != null)
                        out.print(sub.getStudentMiddleName().escapeXml());
                }
             }
             if (sub.getStudentBirthYear() != null) {
                out.print(" "+sub.getStudentBirthYear()+"-");
             }
        %} 
    </dcvalue>

    <!-- dc.title = Document Title -->
    #{if sub.getDocumentTitle() != null } 
    <dcvalue element="title">
        ${ sub.getDocumentTitle().escapeXml() }
    </dcvalue>
    #{/if}
    
    <!-- dc.description.abstract = Document Abstract -->
    #{if sub.getDocumentAbstract() != null } 
    <dcvalue element="description" qualifier="abstract">
        ${ sub.getDocumentAbstract().escapeXml() }
    </dcvalue>
    #{/if}
    
    <!-- dc.subject = Document Keywords, split on ";" (multiple) -->
    #{if sub.getDocumentKeywords() != null } 
    #{list items:sub.getDocumentKeywords().split(";"), as:'keyword'} 
    <dcvalue element="subject">
        ${ keyword.trim().escapeXml() }
    </dcvalue>
    #{/list}
    #{/if}

    <!-- dc.contributor.advisor = Committee Memmbers who are flagged as chair (may be multiple) -->
    #{list items:sub.getCommitteeMembers(), as:'member'} 
    #{if member.isCommitteeChair() } 
    <dcvalue element="contributor" qualifier="advisor">
        %{
             if (member.getLastName() == null) {
                out.print("Unknown");
             } else {
                out.print(member.getLastName().escapeXml());
                if (member.getFirstName() == null || member.getLastName()) {
                    out.print(", ");
                    if (member.getFirstName() != null)
                        out.print(member.getFirstName().escapeXml());
                    out.print(" ");
                    if (member.getMiddleName() != null)
                        out.print(member.getMiddleName().escapeXml());
                }
             }
        %} 
    </dcvalue>
    #{/if}
    #{/list}
    
    
    <!-- dc.contributor.committeeMember = Committee Members who are not flagged as chair (likely multiple) -->
    #{list items:sub.getCommitteeMembers(), as:'member'}
    #{if !member.isCommitteeChair() } 
    <dcvalue element="contributor" qualifier="advisor">
        %{
             if (member.getLastName() == null) {
                out.print("Unknown");
             } else {
                out.print(member.getLastName().escapeXml());
                if (member.getFirstName() == null || member.getLastName()) {
                    out.print(", ");
                    if (member.getFirstName() != null)
                        out.print(member.getFirstName().escapeXml());
                    out.print(" ");
                    if (member.getMiddleName() != null)
                        out.print(member.getMiddleName().escapeXml());
                }
             }
        %} 
    </dcvalue>
    #{/if}
    #{/list}
    
    
    <!-- dc.date.created = Graduation date in "YYYY-MM" format -->
    <!-- dc.date.submitted = Graduation date in "month YYYY" format -->
    #{if sub.getGraduationYear() != null } 
    <dcvalue element="date" qualifier="created">
        %{
            out.print(sub.getGraduationYear());
            if (sub.getGraduationMonth() != null) {
                out.print("-");
                // Jaunary=0, December=11
                out.print(sub.getGraduationMonth()+1);
            }
        }% 
    </dcvalue>
    <dcvalue element="date" qualifier="submitted">
        %{
             String monthName = null;
             if (sub.getGraduationMonth() != null && sub.getGraduationMonth() >= 0 && sub.getGraduationMonth() <= 11)
                monthName = new java.text.DateFormatSymbols().getMonths()[sub.getGraduationMonth()]; 
             if (sub.getGraduationYear() != null)
                out.print(sub.getGraduationYear());
             if (monthName != null)
                out.print(" "+monthName);
         }% 
    </dcvalue>
    #{/if}
    
    <!-- dc.date.issued = Approval date in "YYYY-MM-DD" format -->
    #{if sub.getApprovalDate() != null } 
    <dcvalue element="date" qualifier="issued">
        ${ sub.getApprovalDate().format("yyyy-MM-dd") }
    </dcvalue>
    #{/if}
    
    
    <!-- dc.format.mimetype = Primary Document's mimetype, almost always "application/pdf" -->
    #{if sub.getPrimaryDocument() != null } 
    <dcvalue element="format" qualifier="mimetype">
        ${ sub.getPrimaryDocument().getMimeType().escapeXml() }
    </dcvalue>
    #{/if}
    
    <!-- dc.language.iso = "en_US" // Sorry we are lazy and Americans. -->
    <dcvalue element="language" qualifier="iso">en_US</dcvalue>
    
    <!-- dc.type.material = "text" // constant -->
    <dcvalue element="type" qualifier="material">text</dcvalue>
    
    <!-- dc.type.genre = "thesis" // constant -->
    <dcvalue element="type" qualifier="genre">thesis</dcvalue>
    
    <!-- dc.identifier.uri == Deposit ID, this would only be available when re-depositing -->
    #{if sub.getDepositId() != null } 
    <dcvalue element="identifier" qualifier="uri">
        ${ sub.getDepositId().escapeXml() }
    </dcvalue>
    #{/if}
    
    <!-- dc.description.proveance = Embargo Notes -->
       #{if sub.getEmbargoType() != null } 
       
       #{if sub.getEmbargoType().getDuration() == null } 
       <dcvalue element="description" qualifier="provenance">
           Submission original under an indefinite embargo labeled '${ sub.getEmbargoType().getName().escapeXml() }'. The submission was exported from vireo on ${ new java.util.Date().format("yyyy-MM-dd") } without embargo terms
       </dcvalue>
       #{/if} 
       #{elseif sub.getEmbargoType().getDuration() != 0 } 
       %{
           // Calculate the embargo lift date.
           java.util.Calendar cal = java.util.Calendar.getInstance();
           
           if (sub.getGraduationYear() != null) {
               cal.clear();
               cal.set(java.util.Calendar.YEAR, sub.getGraduationYear());
               if (sub.getGraduationMonth() != null)
                   cal.set(java.util.Calendar.MONTH,sub.getGraduationMonth());
           }
           
           cal.add(java.util.Calendar.MONTH, sub.getEmbargoType().getDuration());
           java.util.Date liftDate = cal.getTime();
       }% 
       <dcvalue element="description" qualifier="provenance">
           Submission published under a ${sub.getEmbargoType().getDuration() } month embargo labeled '${ sub.getEmbargoType().getName().escapeXml() }', the embargo will last until ${ liftDate.format("yyyy-MM-dd") }
       </dcvalue>
       #{/elseif} 
       #{else} 
       <dcvalue element="description" qualifier="provenance">
           Submission originaly under the a zero month embargo labeled '${ sub.getEmbargoType().getName().escapeXml() }'.
       </dcvalue>
       #{/else}

       #{/if} 
    
     <!-- dc.description.provenance = Statement about when this package was generated. -->
        <dcvalue element="description" qualifier="provenance">
            DSpace METS Submission Ingestion Package generated from Vireo submission #${ sub.getId() } on ${ new java.util.Date().format("yyyy-MM-dd 'at' HH:mm:ss") }
        </dcvalue>  
    
</dublin_core>
#{/elseif}
#{elseif "metadata_thesis.xml".equals(template) }
<?xml version="1.0" encoding="utf-8"?>
<dublin_core schema="degree">
    <!-- thesis.degree.name == Degree -->
    #{if sub.getDegree() != null } 
    <dcvalue element="degree" qualifier="name">
        ${ sub.getDegree().escapeXml() }
    </dcvalue>
    #{/if}
    
    <!-- thesis.degree.level = Degree Level (Doctoral, Masters, Undergraduate) -->
    #{if sub.getDegreeLevel() != null } 
    <dcvalue element="degree" qualifier="level">
        ${ sub.getDegreeLevel().name().toLowerCase().capitalizeWords().escapeXml() }
    </dcvalue>
    #{/if}
    
    <!-- thesis.degree.discipline = Major -->
    #{if sub.getMajor() != null } 
    <dcvalue element="degree" qualifier="discipline">
        ${ sub.getMajor().escapeXml() }
    </dcvalue>
    #{/if}
    
    <!-- thesis.degree.grantor = Global configuration setting (settings tab - application settings) -->
    #{ if settingRepo.getConfig(org.tdl.vireo.model.Configuration.GRANTOR) != null } 
    <dcvalue element="degree" qualifier="grantor">
        ${ settingRepo.getConfig(org.tdl.vireo.model.Configuration.GRANTOR) }
    </dcvalue>
    #{/if}
    
    <!-- thesis.degree.department = Department -->
    #{if sub.getDepartment() != null } 
    <dcvalue element="degree" qualifier="department">
        ${ sub.getDepartment().escapeXml() }
    </dcvalue>
    #{/if}
    
    
    <!-- thesis.degree.college = College -->
    #{if sub.getCollege() != null } 
    <dcvalue element="degree" qualifier="college">
        ${ sub.getCollege().escapeXml() }
    </dcvalue>
    #{/if} 
</dublin_core>
#{/elseif}
#{elseif "metadata_local.xml".equals(template) }
<?xml version="1.0" encoding="utf-8"?>
<dublin_core schema="local">
	<!-- local.embargo.terms and lift-->
	#{if sub.getEmbargoType() != null && sub.getEmbargoType().getDuration() != null && sub.getEmbargoType().getDuration() != 0 } 
	%{
	    // Calculate the embargo lift date.
	    java.util.Calendar cal = java.util.Calendar.getInstance();
	    
	    if (sub.getGraduationYear() != null) {
	        cal.clear();
	        cal.set(java.util.Calendar.YEAR, sub.getGraduationYear());
	        if (sub.getGraduationMonth() != null)
	            cal.set(java.util.Calendar.MONTH,sub.getGraduationMonth());
	    }
	    
	    cal.add(java.util.Calendar.MONTH, sub.getEmbargoType().getDuration());
	    java.util.Date liftDate = cal.getTime();
	}% 
	<dcvalue element="embargo" qualifier="terms">
	    ${ liftDate.format("yyyy-MM-dd") }
	</dcvalue>
	<dcvalue element="embargo" qualifier="lift">
	    ${ liftDate.format("yyyy-MM-dd") }
	</dcvalue>
	#{/if} 
</dublin_core>		
#{/elseif}
#{else}
This file, ${template}, is not supported by the DSpace Simple Archive format.
#{/else}
